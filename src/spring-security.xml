<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns:bean="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <global-method-security jsr250-annotations="enabled"
                            pre-post-annotations="enabled" />

    <http pattern="/resources/**" security="none"/>
    <http pattern="/register.jsp" security="none"/>

	<!--  Spring-Security 的配置 -->
	<!-- 注意use-expressions=true.表示开启表达式,否则表达式将不可用.
	see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html
	 -->
	<http auto-config="true" use-expressions="true"
                   access-denied-page="/unauthorize" >

		<intercept-url pattern="/user/login" access="permitAll"/>
        <intercept-url pattern="/auth/getSecretKey" access="permitAll"/>
        <intercept-url pattern="cache/clear" access="permitAll"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" />

		<form-login
				login-page="/user/login"
                username-parameter="username"
                password-parameter="password"
				authentication-failure-url="/user/login?error=true"
				default-target-url="/home"/>

		<logout
				invalidate-session="true"
				logout-success-url="/user/login"
				logout-url="/auth/logout"/>

        <!-- enable csrf protection -->
        <!--<csrf/>-->
	</http>

	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<authentication-manager>
	        <authentication-provider user-service-ref="userDetailsService">
	        		<password-encoder ref="passwordEncoder"/>
	        </authentication-provider>
	</authentication-manager>

	<!-- 对密码进行加密 -->
	<bean:bean class="com.rootls.user.MyPasswordEncoder" id="passwordEncoder"/>

	<!-- 
		通过 customUserDetailsService,Spring会自动的用户的访问级别.
		也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.
	 -->
	<bean:bean id="userDetailsService" class="com.rootls.user.CustomUserDetailsService"/>

</bean:beans>
